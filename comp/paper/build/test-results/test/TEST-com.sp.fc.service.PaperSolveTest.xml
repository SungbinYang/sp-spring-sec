<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="학습자가 시험지를 푸는 것에 대해서 테스트 한다." tests="7" skipped="0" failures="0" errors="0" timestamp="2021-08-29T21:04:40" hostname="yangsungbinui-MacBookPro.local" time="0.297">
  <properties/>
  <testcase name="7. 상태에 따라 시험지가 조회된다." classname="com.sp.fc.service.PaperSolveTest" time="0.075"/>
  <testcase name="4. 1번 문제 풀고 중간에 제출해 버린다." classname="com.sp.fc.service.PaperSolveTest" time="0.04"/>
  <testcase name="5. 2문제 풀고 중간에 제출해 버린다." classname="com.sp.fc.service.PaperSolveTest" time="0.034"/>
  <testcase name="1. 시험지를 모두 풀어서 100점을 맞는다." classname="com.sp.fc.service.PaperSolveTest" time="0.035"/>
  <testcase name="6. 문제를 풀지 않고 그냥 제출해 버린다." classname="com.sp.fc.service.PaperSolveTest" time="0.034"/>
  <testcase name="3. 문제를 모두 틀려서 0점을 맞는다." classname="com.sp.fc.service.PaperSolveTest" time="0.037"/>
  <testcase name="2. 문제를 한개 틀려서 50점을 맞는다." classname="com.sp.fc.service.PaperSolveTest" time="0.03"/>
  <system-out><![CDATA[2021-08-30 06:04:40.497  INFO 9015 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.sp.fc.service.PaperSolveTest], using SpringBootContextLoader
2021-08-30 06:04:40.498  INFO 9015 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.sp.fc.service.PaperSolveTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-08-30 06:04:40.498  INFO 9015 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.sp.fc.service.PaperSolveTest]: PaperSolveTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-08-30 06:04:40.503  INFO 9015 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.sp.fc.PaperTestApp for test class com.sp.fc.service.PaperSolveTest
2021-08-30 06:04:40.504  INFO 9015 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2021-08-30 06:04:40.505  INFO 9015 --- [    Test worker] b.t.a.o.j.DataJpaTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@297107a1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@589494a5, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@39297910, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6a039e0e, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4beed0e0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@37a34484, org.springframework.test.context.event.EventPublishingTestExecutionListener@45304a99, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@33b54fdf, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@e61e099, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@234b02b5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6468f0c7, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7dba9022, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7cdec224]
2021-08-30 06:04:40.516  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@7bd350f0, testMethod = 상태에_따라_시험지가_조회된다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@39572272]; rollback [true]
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_
Hibernate: select problem0_.problem_id as problem_1_4_, problem0_.answer as answer2_4_, problem0_.content as content3_4_, problem0_.created as created4_4_, problem0_.index_num as index_nu5_4_, problem0_.paper_template_id as paper_te6_4_, problem0_.updated as updated7_4_ from problem problem0_
Hibernate: select papertempl0_.paper_template_id as paper_te1_3_, papertempl0_.complete_count as complete2_3_, papertempl0_.created as created3_3_, papertempl0_.name as name4_3_, papertempl0_.published_count as publishe5_3_, papertempl0_.total as total6_3_, papertempl0_.updated as updated7_3_, papertempl0_.user_id as user_id8_3_ from paper_template papertempl0_
Hibernate: select school0_.school_id as school_i1_5_, school0_.city as city2_5_, school0_.created as created3_5_, school0_.name as name4_5_, school0_.updated as updated5_5_ from school school0_
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_
Hibernate: insert into school (school_id, city, created, name, updated) values (null, ?, ?, ?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into paper_template (paper_template_id, complete_count, created, name, published_count, total, updated, user_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_ where user0_.user_id in (?)
Hibernate: insert into paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_ where paper0_.study_user_id=? and (paper0_.state in (? , ?)) order by paper0_.created desc
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_ where paper0_.study_user_id=? and paper0_.state=? order by paper0_.created desc
Hibernate: select paperanswe0_.num as num1_2_0_, paperanswe0_.paper_id as paper_id2_2_0_, paperanswe0_.answer as answer3_2_0_, paperanswe0_.answered as answered4_2_0_, paperanswe0_.correct as correct5_2_0_, paperanswe0_.paper_paper_id as paper_pa7_2_0_, paperanswe0_.problem_id as problem_6_2_0_ from paper_answer paperanswe0_ where paperanswe0_.num=? and paperanswe0_.paper_id=?
Hibernate: insert into paper_answer (answer, answered, correct, paper_paper_id, problem_id, num, paper_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: update paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update paper set answered=?, correct=?, created=?, end_time=?, name=?, paper_template_id=?, start_time=?, state=?, study_user_id=?, total=? where paper_id=?
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_ where paper0_.study_user_id=? and (paper0_.state in (? , ?)) order by paper0_.created desc
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_ where paper0_.study_user_id=? and paper0_.state=? order by paper0_.created desc
Hibernate: update paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update paper set answered=?, correct=?, created=?, end_time=?, name=?, paper_template_id=?, start_time=?, state=?, study_user_id=?, total=? where paper_id=?
Hibernate: update paper_answer set answer=?, answered=?, correct=?, paper_paper_id=?, problem_id=? where num=? and paper_id=?
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_ where paper0_.study_user_id=? and (paper0_.state in (? , ?)) order by paper0_.created desc
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_ where paper0_.study_user_id=? and paper0_.state=? order by paper0_.created desc
2021-08-30 06:04:40.587  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@7bd350f0, testMethod = 상태에_따라_시험지가_조회된다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-08-30 06:04:40.592  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@5f2a82fa, testMethod = 첫번째_문제_풀고_중간에_제출해_버린다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@39572272]; rollback [true]
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_
Hibernate: select problem0_.problem_id as problem_1_4_, problem0_.answer as answer2_4_, problem0_.content as content3_4_, problem0_.created as created4_4_, problem0_.index_num as index_nu5_4_, problem0_.paper_template_id as paper_te6_4_, problem0_.updated as updated7_4_ from problem problem0_
Hibernate: select papertempl0_.paper_template_id as paper_te1_3_, papertempl0_.complete_count as complete2_3_, papertempl0_.created as created3_3_, papertempl0_.name as name4_3_, papertempl0_.published_count as publishe5_3_, papertempl0_.total as total6_3_, papertempl0_.updated as updated7_3_, papertempl0_.user_id as user_id8_3_ from paper_template papertempl0_
Hibernate: select school0_.school_id as school_i1_5_, school0_.city as city2_5_, school0_.created as created3_5_, school0_.name as name4_5_, school0_.updated as updated5_5_ from school school0_
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_
Hibernate: insert into school (school_id, city, created, name, updated) values (null, ?, ?, ?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into paper_template (paper_template_id, complete_count, created, name, published_count, total, updated, user_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_ where user0_.user_id in (?)
Hibernate: insert into paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select paperanswe0_.num as num1_2_0_, paperanswe0_.paper_id as paper_id2_2_0_, paperanswe0_.answer as answer3_2_0_, paperanswe0_.answered as answered4_2_0_, paperanswe0_.correct as correct5_2_0_, paperanswe0_.paper_paper_id as paper_pa7_2_0_, paperanswe0_.problem_id as problem_6_2_0_ from paper_answer paperanswe0_ where paperanswe0_.num=? and paperanswe0_.paper_id=?
2021-08-30 06:04:40.629  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@5f2a82fa, testMethod = 첫번째_문제_풀고_중간에_제출해_버린다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-08-30 06:04:40.633  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@53c04570, testMethod = 두번째_문제_풀고_중간에_제출해_버린다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@39572272]; rollback [true]
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_
Hibernate: select problem0_.problem_id as problem_1_4_, problem0_.answer as answer2_4_, problem0_.content as content3_4_, problem0_.created as created4_4_, problem0_.index_num as index_nu5_4_, problem0_.paper_template_id as paper_te6_4_, problem0_.updated as updated7_4_ from problem problem0_
Hibernate: select papertempl0_.paper_template_id as paper_te1_3_, papertempl0_.complete_count as complete2_3_, papertempl0_.created as created3_3_, papertempl0_.name as name4_3_, papertempl0_.published_count as publishe5_3_, papertempl0_.total as total6_3_, papertempl0_.updated as updated7_3_, papertempl0_.user_id as user_id8_3_ from paper_template papertempl0_
Hibernate: select school0_.school_id as school_i1_5_, school0_.city as city2_5_, school0_.created as created3_5_, school0_.name as name4_5_, school0_.updated as updated5_5_ from school school0_
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_
Hibernate: insert into school (school_id, city, created, name, updated) values (null, ?, ?, ?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into paper_template (paper_template_id, complete_count, created, name, published_count, total, updated, user_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_ where user0_.user_id in (?)
Hibernate: insert into paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select paperanswe0_.num as num1_2_0_, paperanswe0_.paper_id as paper_id2_2_0_, paperanswe0_.answer as answer3_2_0_, paperanswe0_.answered as answered4_2_0_, paperanswe0_.correct as correct5_2_0_, paperanswe0_.paper_paper_id as paper_pa7_2_0_, paperanswe0_.problem_id as problem_6_2_0_ from paper_answer paperanswe0_ where paperanswe0_.num=? and paperanswe0_.paper_id=?
2021-08-30 06:04:40.664  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@53c04570, testMethod = 두번째_문제_풀고_중간에_제출해_버린다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-08-30 06:04:40.669  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@5ae960c2, testMethod = 시험지를_모두_풀어서_100점을_맞는다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@39572272]; rollback [true]
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_
Hibernate: select problem0_.problem_id as problem_1_4_, problem0_.answer as answer2_4_, problem0_.content as content3_4_, problem0_.created as created4_4_, problem0_.index_num as index_nu5_4_, problem0_.paper_template_id as paper_te6_4_, problem0_.updated as updated7_4_ from problem problem0_
Hibernate: select papertempl0_.paper_template_id as paper_te1_3_, papertempl0_.complete_count as complete2_3_, papertempl0_.created as created3_3_, papertempl0_.name as name4_3_, papertempl0_.published_count as publishe5_3_, papertempl0_.total as total6_3_, papertempl0_.updated as updated7_3_, papertempl0_.user_id as user_id8_3_ from paper_template papertempl0_
Hibernate: select school0_.school_id as school_i1_5_, school0_.city as city2_5_, school0_.created as created3_5_, school0_.name as name4_5_, school0_.updated as updated5_5_ from school school0_
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_
Hibernate: insert into school (school_id, city, created, name, updated) values (null, ?, ?, ?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into paper_template (paper_template_id, complete_count, created, name, published_count, total, updated, user_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_ where user0_.user_id in (?)
Hibernate: insert into paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select paperanswe0_.num as num1_2_0_, paperanswe0_.paper_id as paper_id2_2_0_, paperanswe0_.answer as answer3_2_0_, paperanswe0_.answered as answered4_2_0_, paperanswe0_.correct as correct5_2_0_, paperanswe0_.paper_paper_id as paper_pa7_2_0_, paperanswe0_.problem_id as problem_6_2_0_ from paper_answer paperanswe0_ where paperanswe0_.num=? and paperanswe0_.paper_id=?
Hibernate: select paperanswe0_.num as num1_2_0_, paperanswe0_.paper_id as paper_id2_2_0_, paperanswe0_.answer as answer3_2_0_, paperanswe0_.answered as answered4_2_0_, paperanswe0_.correct as correct5_2_0_, paperanswe0_.paper_paper_id as paper_pa7_2_0_, paperanswe0_.problem_id as problem_6_2_0_ from paper_answer paperanswe0_ where paperanswe0_.num=? and paperanswe0_.paper_id=?
2021-08-30 06:04:40.701  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@5ae960c2, testMethod = 시험지를_모두_풀어서_100점을_맞는다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-08-30 06:04:40.706  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@132afc52, testMethod = 문제를_풀지_않고_그냥_제출해_버린다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@39572272]; rollback [true]
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_
Hibernate: select problem0_.problem_id as problem_1_4_, problem0_.answer as answer2_4_, problem0_.content as content3_4_, problem0_.created as created4_4_, problem0_.index_num as index_nu5_4_, problem0_.paper_template_id as paper_te6_4_, problem0_.updated as updated7_4_ from problem problem0_
Hibernate: select papertempl0_.paper_template_id as paper_te1_3_, papertempl0_.complete_count as complete2_3_, papertempl0_.created as created3_3_, papertempl0_.name as name4_3_, papertempl0_.published_count as publishe5_3_, papertempl0_.total as total6_3_, papertempl0_.updated as updated7_3_, papertempl0_.user_id as user_id8_3_ from paper_template papertempl0_
Hibernate: select school0_.school_id as school_i1_5_, school0_.city as city2_5_, school0_.created as created3_5_, school0_.name as name4_5_, school0_.updated as updated5_5_ from school school0_
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_
Hibernate: insert into school (school_id, city, created, name, updated) values (null, ?, ?, ?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into paper_template (paper_template_id, complete_count, created, name, published_count, total, updated, user_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_ where user0_.user_id in (?)
Hibernate: insert into paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2021-08-30 06:04:40.738  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@132afc52, testMethod = 문제를_풀지_않고_그냥_제출해_버린다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-08-30 06:04:40.743  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@51a3009f, testMethod = 문제를_모두_틀려서_0점을_맞는다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@39572272]; rollback [true]
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_
Hibernate: select problem0_.problem_id as problem_1_4_, problem0_.answer as answer2_4_, problem0_.content as content3_4_, problem0_.created as created4_4_, problem0_.index_num as index_nu5_4_, problem0_.paper_template_id as paper_te6_4_, problem0_.updated as updated7_4_ from problem problem0_
Hibernate: select papertempl0_.paper_template_id as paper_te1_3_, papertempl0_.complete_count as complete2_3_, papertempl0_.created as created3_3_, papertempl0_.name as name4_3_, papertempl0_.published_count as publishe5_3_, papertempl0_.total as total6_3_, papertempl0_.updated as updated7_3_, papertempl0_.user_id as user_id8_3_ from paper_template papertempl0_
Hibernate: select school0_.school_id as school_i1_5_, school0_.city as city2_5_, school0_.created as created3_5_, school0_.name as name4_5_, school0_.updated as updated5_5_ from school school0_
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_
Hibernate: insert into school (school_id, city, created, name, updated) values (null, ?, ?, ?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into paper_template (paper_template_id, complete_count, created, name, published_count, total, updated, user_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_ where user0_.user_id in (?)
Hibernate: insert into paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select paperanswe0_.num as num1_2_0_, paperanswe0_.paper_id as paper_id2_2_0_, paperanswe0_.answer as answer3_2_0_, paperanswe0_.answered as answered4_2_0_, paperanswe0_.correct as correct5_2_0_, paperanswe0_.paper_paper_id as paper_pa7_2_0_, paperanswe0_.problem_id as problem_6_2_0_ from paper_answer paperanswe0_ where paperanswe0_.num=? and paperanswe0_.paper_id=?
Hibernate: select paperanswe0_.num as num1_2_0_, paperanswe0_.paper_id as paper_id2_2_0_, paperanswe0_.answer as answer3_2_0_, paperanswe0_.answered as answered4_2_0_, paperanswe0_.correct as correct5_2_0_, paperanswe0_.paper_paper_id as paper_pa7_2_0_, paperanswe0_.problem_id as problem_6_2_0_ from paper_answer paperanswe0_ where paperanswe0_.num=? and paperanswe0_.paper_id=?
2021-08-30 06:04:40.777  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@51a3009f, testMethod = 문제를_모두_틀려서_0점을_맞는다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-08-30 06:04:40.782  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@7dd5bb85, testMethod = 문제를_한개_틀려서_50점을_맞는다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@39572272]; rollback [true]
Hibernate: select paper0_.paper_id as paper_id1_1_, paper0_.answered as answered2_1_, paper0_.correct as correct3_1_, paper0_.created as created4_1_, paper0_.end_time as end_time5_1_, paper0_.name as name6_1_, paper0_.paper_template_id as paper_te7_1_, paper0_.start_time as start_ti8_1_, paper0_.state as state9_1_, paper0_.study_user_id as study_u10_1_, paper0_.total as total11_1_ from paper paper0_
Hibernate: select problem0_.problem_id as problem_1_4_, problem0_.answer as answer2_4_, problem0_.content as content3_4_, problem0_.created as created4_4_, problem0_.index_num as index_nu5_4_, problem0_.paper_template_id as paper_te6_4_, problem0_.updated as updated7_4_ from problem problem0_
Hibernate: select papertempl0_.paper_template_id as paper_te1_3_, papertempl0_.complete_count as complete2_3_, papertempl0_.created as created3_3_, papertempl0_.name as name4_3_, papertempl0_.published_count as publishe5_3_, papertempl0_.total as total6_3_, papertempl0_.updated as updated7_3_, papertempl0_.user_id as user_id8_3_ from paper_template papertempl0_
Hibernate: select school0_.school_id as school_i1_5_, school0_.city as city2_5_, school0_.created as created3_5_, school0_.name as name4_5_, school0_.updated as updated5_5_ from school school0_
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_
Hibernate: insert into school (school_id, city, created, name, updated) values (null, ?, ?, ?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into user (user_id, created, email, enabled, grade, name, password, school_school_id, teacher_user_id, updated) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select authority0_.user_id as user_id1_0_0_, authority0_.authority as authorit2_0_0_ from authority authority0_ where authority0_.user_id=? and authority0_.authority=?
Hibernate: insert into authority (user_id, authority) values (?, ?)
Hibernate: insert into paper_template (paper_template_id, complete_count, created, name, published_count, total, updated, user_id) values (null, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: insert into problem (problem_id, answer, content, created, index_num, paper_template_id, updated) values (null, ?, ?, ?, ?, ?, ?)
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update user set email=?, enabled=?, grade=?, name=?, password=?, school_school_id=?, teacher_user_id=?, updated=? where user_id=?
Hibernate: update paper_template set complete_count=?, name=?, published_count=?, total=?, updated=?, user_id=? where paper_template_id=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update authority set authorities_user_id=? where user_id=? and authority=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: update problem set problem_list_paper_template_id=? where problem_id=?
Hibernate: select user0_.user_id as user_id1_6_, user0_.created as created2_6_, user0_.email as email3_6_, user0_.enabled as enabled4_6_, user0_.grade as grade5_6_, user0_.name as name6_6_, user0_.password as password7_6_, user0_.school_school_id as school_s9_6_, user0_.teacher_user_id as teacher10_6_, user0_.updated as updated8_6_ from user user0_ where user0_.user_id in (?)
Hibernate: insert into paper (paper_id, answered, correct, created, end_time, name, paper_template_id, start_time, state, study_user_id, total) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select paperanswe0_.num as num1_2_0_, paperanswe0_.paper_id as paper_id2_2_0_, paperanswe0_.answer as answer3_2_0_, paperanswe0_.answered as answered4_2_0_, paperanswe0_.correct as correct5_2_0_, paperanswe0_.paper_paper_id as paper_pa7_2_0_, paperanswe0_.problem_id as problem_6_2_0_ from paper_answer paperanswe0_ where paperanswe0_.num=? and paperanswe0_.paper_id=?
Hibernate: select paperanswe0_.num as num1_2_0_, paperanswe0_.paper_id as paper_id2_2_0_, paperanswe0_.answer as answer3_2_0_, paperanswe0_.answered as answered4_2_0_, paperanswe0_.correct as correct5_2_0_, paperanswe0_.paper_paper_id as paper_pa7_2_0_, paperanswe0_.problem_id as problem_6_2_0_ from paper_answer paperanswe0_ where paperanswe0_.num=? and paperanswe0_.paper_id=?
2021-08-30 06:04:40.809  INFO 9015 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@6e54c442 testClass = PaperSolveTest, testInstance = com.sp.fc.service.PaperSolveTest@7dd5bb85, testMethod = 문제를_한개_틀려서_50점을_맞는다@PaperSolveTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899e5a4 testClass = PaperSolveTest, locations = '{}', classes = '{class com.sp.fc.PaperTestApp}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@ae30538, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@104db479, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e5015237, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6cac0485, [ImportsContextCustomizer@2efb6b09 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@52af207c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14b40924, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
